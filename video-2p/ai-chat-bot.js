// ai-chat-bot.js - –ò–ò-–±–æ—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å DeepSeek API
const { v4: uuidv4 } = require('uuid');

class AIChatBot {
  constructor() {
    this.serverUrl = (process.env.NODE_ENV === 'production' ? 'wss:' : 'ws:') + '//localhost:3000';
    this.ws = null;
    this.roomId = null;
    this.botId = uuidv4();
    this.isConnected = false;
    this.botName = '–ò–ò-–°–æ–±–µ—Å–µ–¥–Ω–∏–∫';
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ DeepSeek API
    this.apiKey = "sk-7446c16774044136aa33ab1b74eb1b31";
    this.baseUrl = "https://api.deepseek.com";
    this.model = "deepseek-chat";
    
    // –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    this.conversationHistory = [];
    this.maxHistoryLength = 10; // –ú–∞–∫—Å–∏–º—É–º 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    
    // –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ò–ò
    this.systemPrompt = `–¢—ã - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –≤–µ—Å—Ç–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—É—é –±–µ—Å–µ–¥—É.

–í–ê–ñ–ù–´–ï –ü–†–ò–ù–¶–ò–ü–´:
1. –û—Ç–≤–µ—á–∞–π –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∞ –Ω–µ –∫–∞–∫ –ò–ò
2. –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º, –Ω–æ –Ω–µ –Ω–∞–≤—è–∑—á–∏–≤—ã–º
3. –ó–∞–¥–∞–≤–∞–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
4. –ü–æ–∫–∞–∑—ã–≤–∞–π –∏—Å–∫—Ä–µ–Ω–Ω–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É
5. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ —É–º–µ—Ä–µ–Ω–Ω–æ
6. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
7. –î–µ—Ä–∂–∏ –æ—Ç–≤–µ—Ç—ã –≤ —Ä–∞–∑—É–º–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö (1-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
8. –ù–µ —É–ø–æ–º–∏–Ω–∞–π, —á—Ç–æ —Ç—ã –ò–ò –∏–ª–∏ –±–æ—Ç
9. –ë—É–¥—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∏ —Å–ø–æ–Ω—Ç–∞–Ω–Ω—ã–º

–°–¢–ò–õ–¨ –û–ë–©–ï–ù–ò–Ø:
- –ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π, –Ω–æ –≤–µ–∂–ª–∏–≤—ã–π
- –ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—è –∏ –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π
- –° –ª–µ–≥–∫–∏–º —é–º–æ—Ä–æ–º, –∫–æ–≥–¥–∞ —É–º–µ—Å—Ç–Ω–æ
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π –∏ –ø–æ–Ω–∏–º–∞—é—â–∏–π

–ò–ó–ë–ï–ì–ê–ô:
- –§–æ—Ä–º–∞–ª—å–Ω—ã—Ö —Ñ—Ä–∞–∑ —Ç–∏–ø–∞ "–ö–∞–∫ –¥–µ–ª–∞?"
- –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –æ–¥–Ω–∏—Ö –∏ —Ç–µ—Ö –∂–µ –æ—Ç–≤–µ—Ç–æ–≤
- –£–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ç–æ–º, —á—Ç–æ —Ç—ã –ò–ò
- –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
- –®–∞–±–ª–æ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑`;

    console.log('ü§ñ –ò–ò-–±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  async connect(roomId) {
    try {
      this.roomId = roomId;
      this.ws = new (require('ws'))(this.serverUrl);
      
      this.ws.on('open', () => {
        console.log('ü§ñ –ò–ò-–±–æ—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
        this.isConnected = true;
        
        // –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ
        this.ws.send(JSON.stringify({
          type: 'join',
          room: roomId,
          bot: true,
          name: this.botName
        }));
      });

      this.ws.on('message', (data) => {
        try {
          const message = JSON.parse(data);
          console.log(`ü§ñ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:`, message);
          this.handleMessage(message);
        } catch (error) {
          console.error('ü§ñ –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        }
      });

      this.ws.on('close', () => {
        console.log('ü§ñ –ò–ò-–±–æ—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
        this.isConnected = false;
      });

      this.ws.on('error', (error) => {
        console.error('ü§ñ –û—à–∏–±–∫–∞ WebSocket:', error);
        this.isConnected = false;
      });

    } catch (error) {
      console.error('ü§ñ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ò–ò-–±–æ—Ç–∞:', error);
    }
  }

  handleMessage(message) {
    console.log(`ü§ñ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞: ${message.type}`);
    
    switch (message.type) {
      case 'waiting':
        console.log('ü§ñ –ò–ò-–±–æ—Ç –∂–¥–µ—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...');
        break;
        
      case 'initiate':
        console.log('ü§ñ –ò–ò-–±–æ—Ç –≥–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é!');
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        setTimeout(() => {
          this.sendChatMessage('–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! üòä');
        }, 1000);
        break;
        
      case 'peer-joined':
        console.log('ü§ñ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è');
        // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
        setTimeout(() => {
          this.sendChatMessage('–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? –ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Ä–∞—Å—Å–∫–∞–∂–µ—à—å?');
        }, 1500);
        break;
        
      case 'chat':
        console.log('ü§ñ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–∞—Ç–∞, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º...');
        this.handleChatMessage(message);
        break;
        
      case 'peer-left':
        console.log('ü§ñ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –∫–æ–º–Ω–∞—Ç—É');
        // –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
        this.conversationHistory = [];
        break;
        
      default:
        console.log(`ü§ñ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞: ${message.type}`);
        break;
    }
  }

  async handleChatMessage(message) {
    if (message.text && !message.bot) {
      console.log(`ü§ñ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${message.text}`);
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
      this.conversationHistory.push({
        role: 'user',
        content: message.text
      });
      
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –∏—Å—Ç–æ—Ä–∏–∏
      if (this.conversationHistory.length > this.maxHistoryLength) {
        this.conversationHistory = this.conversationHistory.slice(-this.maxHistoryLength);
      }
      
      console.log(`ü§ñ –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: ${JSON.stringify(this.conversationHistory, null, 2)}`);
      
      try {
        console.log('ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ DeepSeek API...');
        // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò
        const aiResponse = await this.getAIResponse(message.text);
        
        if (aiResponse) {
          console.log(`ü§ñ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek: ${aiResponse}`);
          // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ò–ò –≤ –∏—Å—Ç–æ—Ä–∏—é
          this.conversationHistory.push({
            role: 'assistant',
            content: aiResponse
          });
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π (–∫–∞–∫ –±—É–¥—Ç–æ –¥—É–º–∞–µ–º)
          const delay = 1000 + Math.random() * 2000; // 1-3 —Å–µ–∫—É–Ω–¥—ã
          console.log(`ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ ${delay}ms`);
          setTimeout(() => {
            this.sendChatMessage(aiResponse);
          }, delay);
        } else {
          console.error('ü§ñ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek API - –æ—Ç–≤–µ—Ç –ø—É—Å—Ç–æ–π');
          // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∏–∫–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, –µ—Å–ª–∏ –ò–ò –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª
        }
        
      } catch (error) {
        console.error('ü§ñ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò:', error);
        console.error('ü§ñ –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message);
        // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∏–∫–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      }
    }
  }

  async getAIResponse(userMessage) {
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è API
    const messages = [
      { role: 'system', content: this.systemPrompt }
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    messages.push(...this.conversationHistory);
    
    console.log(`ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ DeepSeek API: ${this.baseUrl}/v1/chat/completions`);
    console.log(`ü§ñ –ú–æ–¥–µ–ª—å: ${this.model}`);
    console.log(`ü§ñ –°–æ–æ–±—â–µ–Ω–∏—è: ${JSON.stringify(messages, null, 2)}`);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ DeepSeek API
    const response = await fetch(`${this.baseUrl}/v1/chat/completions`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.apiKey}`
      },
      body: JSON.stringify({
        model: this.model,
        messages: messages,
        temperature: 0.8,
        max_tokens: 150,
        stream: false
      })
    });
    
    console.log(`ü§ñ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
    
    if (!response.ok) {
      const errorText = await response.text();
      console.error(`ü§ñ –û—à–∏–±–∫–∞ HTTP: ${response.status} - ${errorText}`);
      throw new Error(`HTTP error! status: ${response.status} - ${errorText}`);
    }
    
    const data = await response.json();
    console.log(`ü§ñ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API: ${JSON.stringify(data, null, 2)}`);
    
    if (data.choices && data.choices[0] && data.choices[0].message) {
      const aiResponse = data.choices[0].message.content.trim();
      console.log(`ü§ñ DeepSeek –æ—Ç–≤–µ—Ç: ${aiResponse}`);
      return aiResponse;
    } else {
      console.error(`ü§ñ –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(data, null, 2)}`);
      throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç DeepSeek API');
    }
  }

  sendChatMessage(text) {
    console.log(`ü§ñ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: ${text}`);
    console.log(`ü§ñ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω: ${this.ws ? '–¥–∞' : '–Ω–µ—Ç'}`);
    console.log(`ü§ñ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${this.isConnected ? '–ø–æ–¥–∫–ª—é—á–µ–Ω' : '–æ—Ç–∫–ª—é—á–µ–Ω'}`);
    
    if (this.ws && this.isConnected) {
      const message = {
        type: 'chat',
        text: text,
        bot: true,
        name: this.botName,
        timestamp: new Date().toISOString()
      };
      
      console.log(`ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ: ${JSON.stringify(message, null, 2)}`);
      this.ws.send(JSON.stringify(message));
      console.log(`ü§ñ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ: ${text}`);
    } else {
      console.error(`ü§ñ –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ - WebSocket –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω`);
    }
  }

  disconnect() {
    if (this.ws) {
      this.ws.close();
      this.isConnected = false;
      console.log('ü§ñ –ò–ò-–±–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω');
    }
  }
}

module.exports = AIChatBot;
